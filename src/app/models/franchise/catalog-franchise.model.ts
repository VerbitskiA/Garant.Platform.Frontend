export interface CatalogFranchiseModel {
  activityDetail?: string;
  baseDate: number;
  businessCount: number;
  category?: string;
  city?: string;
  commentRejection?: string;
  countDays: number;
  dateCreate?: string;
  dayDeclination?: number;
  dotCount: number;
  finIndicators?: string;
  franchiseId: number;
  franchisePacks?: string;
  fullName?: string;
  fullText?: string;
  generalInvest: number;
  investInclude?: string;
  isAccepted: boolean;
  isGarant: boolean;
  isRejected: boolean;
  launchDate: number;
  lumpSumPayment: number;
  mode?: string;
  nameFinIndicators?: string;
  nameFinModelFile?: string;
  nameFranchisePhoto?: string;
  namePresentFile?: string;
  payback: number;
  paymentDetail?: string;
  peculiarity?: string;
  price?: string;
  profitMonth: number;
  profitPrice: number;
  reviews?: string;
  royalty: number;
  status?: string;
  subCategory?: string;
  text?: string;
  textDoPrice?: string;
  title?: string;
  totalInvest?: string;
  trainingDetails?: string;
  trainingPhotoName?: string;
  url?: string;
  urlLogo?: string;
  urlVideo?: string;
  urlsDetails?: string[];
  user: UserEntity;
  userId?: string;
  viewBusiness?: string;
  yearStart: number;
}

export interface UserEntity {
  id?: string;
  userName?: string;
  normalizedUserName?: string;
  email?: string;
  normalizedEmail?: string;
  emailConfirmed: boolean;
  passwordHash?: string;
  securityStamp?: string;
  concurrencyStamp?: string;
  phoneNumber?: string;
  phoneNumberConfirmed: boolean;
  twoFactorEnabled: boolean;
  lockoutEnd?: string;
  lockoutEnabled: boolean;
  accessFailedCount: number;
  userPassword?: string;
  userRole?: string;
  lastName?: string;
  firstName?: string;
  patronymic?: string;
  userIcon?: string;
  dateRegister: string;
  city?: string;
  rememberMe: boolean;
  code?: string;
  isNews: boolean;
  isWriteQuestion: boolean;
  confirmEmailCode: string;
  nullable: true;
}

